AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
    lambda resources

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
    Function:
        Timeout: 30
        Runtime: nodejs16.x
        MemorySize: 1024
        Handler: index.handler
        Tracing: Active
        Architectures:
            - x86_64

Parameters:
    UserPoolArn:
        Type: String
        Description: Cognito Identity Pool Id

Resources:
    DepsLayer:
        Type: AWS::Serverless::LayerVersion
        Properties:
            LayerName: AWSSDKDynamoDBLayer
            Description: aws sdk DynamoDB package
            ContentUri: "../layers/deps/"
            CompatibleRuntimes:
                - nodejs16.x
    GetDeal:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName: !Sub ${AWS::StackName}-GetDeal
            Description: !Sub Stack ${AWS::StackName} Function GetDeal
            CodeUri: get-deal
            Layers:
                - !Ref DepsLayer
            Policies:
                - DynamoDBReadPolicy:
                      TableName: Deal
            Events:
                APICall:
                    Type: Api
                    Properties:
                        Path: /deal/{id}
                        Method: GET
                        RestApiId: !Ref RestApi
        Metadata: # Manage esbuild properties
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: "es2020"
                EntryPoints:
                    - index.ts
                External:
                    - "@aws-sdk/client-dynamodb"
    GetBrands:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName: !Sub ${AWS::StackName}-GetBrands
            Description: !Sub Stack ${AWS::StackName} Function GetBrands
            CodeUri: get-brands
            Layers:
                - !Ref DepsLayer
            Policies:
                - DynamoDBReadPolicy:
                      TableName: Deal
            Events:
                APICall:
                    Type: Api
                    Properties:
                        Path: /brands
                        Method: GET
                        RestApiId: !Ref RestApi
        Metadata: # Manage esbuild properties
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: "es2020"
                EntryPoints:
                    - index.ts
                External:
                    - "@aws-sdk/client-dynamodb"
    GetBrand:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName: !Sub ${AWS::StackName}-GetBrand
            Description: !Sub Stack ${AWS::StackName} Function GetBrand
            CodeUri: get-brand
            Layers:
                - !Ref DepsLayer
            Policies:
                - DynamoDBReadPolicy:
                      TableName: Deal
            Events:
                APICall:
                    Type: Api
                    Properties:
                        Path: /brand/{brand}
                        Method: GET
                        RestApiId: !Ref RestApi
        Metadata: # Manage esbuild properties
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: "es2020"
                EntryPoints:
                    - index.ts
                External:
                    - "@aws-sdk/client-dynamodb"
    GetUser:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName: !Sub ${AWS::StackName}-GetUser
            Description: !Sub Stack ${AWS::StackName} Function GetUser
            CodeUri: get-user
            Layers:
                - !Ref DepsLayer
            Policies:
                - DynamoDBReadPolicy:
                      TableName: Deal
            Events:
                APICall:
                    Type: Api
                    Properties:
                        Path: /user/{user}
                        Method: GET
                        RestApiId: !Ref RestApi
        Metadata: # Manage esbuild properties
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: "es2020"
                EntryPoints:
                    - index.ts
                External:
                    - "@aws-sdk/client-dynamodb"
    GetLatestAndFeaturedDealsByCategory:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName: !Sub ${AWS::StackName}-LatestFeaturedDealsCategory
            Description: !Sub Stack ${AWS::StackName} Function GetLatestAndFeaturedDealsByCategory
            CodeUri: latest-and-featured-deals
            Layers:
                - !Ref DepsLayer
            Policies:
                - DynamoDBReadPolicy:
                      TableName: Deal
            Events:
                APICall:
                    Type: Api
                    Properties:
                        Path: /latest-and-featured-deals/{category}
                        Method: GET
                        RestApiId: !Ref RestApi
        Metadata: # Manage esbuild properties
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: "es2020"
                EntryPoints:
                    - index.ts
                External:
                    - "@aws-sdk/client-dynamodb"
    GetLatestDeals:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName: !Sub ${AWS::StackName}-GetLatestDeals
            Description: !Sub Stack ${AWS::StackName} Function GetLatestDeals
            CodeUri: get-latest-deals
            Layers:
                - !Ref DepsLayer
            Policies:
                - DynamoDBReadPolicy:
                      TableName: Deal
            Events:
                APICall:
                    Type: Api
                    Properties:
                        Path: /get-latest-deals
                        Method: GET
                        RestApiId: !Ref RestApi
        Metadata: # Manage esbuild properties
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: "es2020"
                EntryPoints:
                    - index.ts
                External:
                    - "@aws-sdk/client-dynamodb"
    GetLatestBrandDeals:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName: !Sub ${AWS::StackName}-GetLatestBrandDeals
            Description: !Sub Stack ${AWS::StackName} Function GetLatestBrandDeals
            CodeUri: get-latest-brand-deals
            Layers:
                - !Ref DepsLayer
            Policies:
                - DynamoDBReadPolicy:
                      TableName: Deal
            Events:
                APICall:
                    Type: Api
                    Properties:
                        Path: /get-latest-brand-deals/{brand}
                        Method: GET
                        RestApiId: !Ref RestApi
        Metadata: # Manage esbuild properties
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: "es2020"
                EntryPoints:
                    - index.ts
                External:
                    - "@aws-sdk/client-dynamodb"
    GetLatestCategoryDeals:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName: !Sub ${AWS::StackName}-GetLatestCategoryDeals
            Description: !Sub Stack ${AWS::StackName} Function GetLatestCategoryDeals
            CodeUri: get-latest-category-deals
            Layers:
                - !Ref DepsLayer
            Policies:
                - DynamoDBReadPolicy:
                      TableName: Deal
            Events:
                APICall:
                    Type: Api
                    Properties:
                        Path: /get-latest-category-deals/{category}
                        Method: GET
                        RestApiId: !Ref RestApi
        Metadata: # Manage esbuild properties
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: "es2020"
                EntryPoints:
                    - index.ts
                External:
                    - "@aws-sdk/client-dynamodb"
    SetBrandLike:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName: !Sub ${AWS::StackName}-SetBrandLike
            Description: !Sub Stack ${AWS::StackName} Function SetBrandLike
            CodeUri: set-brand-like
            Layers:
                - !Ref DepsLayer
            Policies:
                - DynamoDBWritePolicy:
                      TableName: Deal
            Events:
                APICall:
                    Type: Api
                    Properties:
                        Path: /set-brand-like
                        Method: POST
                        RestApiId: !Ref RestApi
        Metadata: # Manage esbuild properties
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: "es2020"
                EntryPoints:
                    - index.ts
                External:
                    - "@aws-sdk/client-dynamodb"
    CreateDeal:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName: !Sub ${AWS::StackName}-CreateDeal
            Description: !Sub Stack ${AWS::StackName} Function CreateDeal
            CodeUri: create-deal
            Layers:
                - !Ref DepsLayer
            Policies:
                - DynamoDBWritePolicy:
                      TableName: Deal
            Events:
                APICall:
                    Type: Api
                    Properties:
                        Path: /create-deal
                        Method: POST
                        RestApiId: !Ref RestApi
        Metadata: # Manage esbuild properties
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: "es2020"
                EntryPoints:
                    - index.ts
                External:
                    - "@aws-sdk/client-dynamodb"
    CreateBrand:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName: !Sub ${AWS::StackName}-CreateBrand
            Description: !Sub Stack ${AWS::StackName} Function CreateBrand
            CodeUri: create-brand
            Layers:
                - !Ref DepsLayer
            Policies:
                - DynamoDBWritePolicy:
                      TableName: Deal
            Events:
                APICall:
                    Type: Api
                    Properties:
                        Path: /create-brand
                        Method: POST
                        RestApiId: !Ref RestApi
        Metadata: # Manage esbuild properties
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: "es2020"
                EntryPoints:
                    - index.ts
                External:
                    - "@aws-sdk/client-dynamodb"
    CreateUser:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName: !Sub ${AWS::StackName}-CreateUser
            Description: !Sub Stack ${AWS::StackName} Function CreateUser
            CodeUri: create-user
            Layers:
                - !Ref DepsLayer
            Policies:
                - DynamoDBWritePolicy:
                      TableName: Deal
        Metadata: # Manage esbuild properties
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: "es2020"
                EntryPoints:
                    - index.ts
                External:
                    - "@aws-sdk/client-dynamodb"
    SetBrandWatch:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName: !Sub ${AWS::StackName}-SetBrandWatch
            Description: !Sub Stack ${AWS::StackName} Function SetBrandWatch
            CodeUri: set-brand-watch
            Layers:
                - !Ref DepsLayer
            Policies:
                - DynamoDBWritePolicy:
                      TableName: Deal
            Events:
                APICall:
                    Type: Api
                    Properties:
                        Path: /set-brand-watch
                        Method: POST
                        RestApiId: !Ref RestApi
        Metadata: # Manage esbuild properties
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: "es2020"
                EntryPoints:
                    - index.ts
                External:
                    - "@aws-sdk/client-dynamodb"
    SetCategoryLike:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName: !Sub ${AWS::StackName}-SetCategoryLike
            Description: !Sub Stack ${AWS::StackName} Function SetCategoryLike
            CodeUri: set-category-like
            Layers:
                - !Ref DepsLayer
            Policies:
                - DynamoDBWritePolicy:
                      TableName: Deal
            Events:
                APICall:
                    Type: Api
                    Properties:
                        Path: /set-category-like
                        Method: POST
                        RestApiId: !Ref RestApi
        Metadata: # Manage esbuild properties
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: "es2020"
                EntryPoints:
                    - index.ts
                External:
                    - "@aws-sdk/client-dynamodb"
    SetCategoryWatch:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName: !Sub ${AWS::StackName}-SetCategoryWatch
            Description: !Sub Stack ${AWS::StackName} Function SetCategoryWatch
            CodeUri: set-category-watch
            Layers:
                - !Ref DepsLayer
            Policies:
                - DynamoDBWritePolicy:
                      TableName: Deal
            Events:
                APICall:
                    Type: Api
                    Properties:
                        Path: /set-category-watch
                        Method: POST
                        RestApiId: !Ref RestApi
        Metadata: # Manage esbuild properties
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: "es2020"
                EntryPoints:
                    - index.ts
                External:
                    - "@aws-sdk/client-dynamodb"
    GetMessages:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName: !Sub ${AWS::StackName}-GetMessages
            Description: !Sub Stack ${AWS::StackName} Function GetMessages
            CodeUri: get-messages
            Layers:
                - !Ref DepsLayer
            Policies:
                - DynamoDBReadPolicy:
                      TableName: Deal
            Events:
                APICall:
                    Type: Api
                    Properties:
                        Path: /messages/{username}
                        Method: GET
                        RestApiId: !Ref RestApi
        Metadata: # Manage esbuild properties
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: "es2020"
                EntryPoints:
                    - index.ts
                External:
                    - "@aws-sdk/client-dynamodb"
    GetUnreadMessages:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName: !Sub ${AWS::StackName}-GetUnreadMessages
            Description: !Sub Stack ${AWS::StackName} Function GetUnreadMessages
            CodeUri: get-unread-messages
            Layers:
                - !Ref DepsLayer
            Policies:
                - DynamoDBReadPolicy:
                      TableName: Deal
            Events:
                APICall:
                    Type: Api
                    Properties:
                        Path: /unread-messages/{username}
                        Method: GET
                        RestApiId: !Ref RestApi
        Metadata: # Manage esbuild properties
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: "es2020"
                EntryPoints:
                    - index.ts
                External:
                    - "@aws-sdk/client-dynamodb"
    RestApi:
        Type: AWS::Serverless::Api
        Properties:
            Cors: "'*'"
            Auth:
                DefaultAuthorizer: CognitoAuthorizer
                Authorizers:
                    CognitoAuthorizer:
                        UserPoolArn: !Ref UserPoolArn
            StageName: Prod
